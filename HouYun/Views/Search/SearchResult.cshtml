@model HouYun.ViewModels.forVideo.SearchViewModel
<style>
    .my-custom-col {
        width: 322px;
        padding-top: 15px;
    }

    .card {
        display: flex;
        flex-direction: column;
        width: 300px;
        height: 360px;
        background-color: inherit;
        border: none;
    }

    .card-img-top {
        width: 300px;
        height: 180px;
        object-fit: cover;
        border-radius: 10px;
    }

    .card-body {
        flex-grow: 1;
    }

    .card-title {
        display: flex;
        justify-content: space-between;
    }

        .card-title a,
        .card-text a {
            color: inherit;
            text-decoration: none;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2;
            overflow: hidden;
        }

</style>
@if (Model.Videos.Any()){
    <a>Результаты поиска по запросу "<strong>@Model.SearchTerm</strong>"</a>
    <div class="row">
        @foreach (var video in Model.Videos)
        {
            <div class="my-custom-col">
                <div class="card video-card">
                    <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">
                        <img class="card-img-top poster-image" src="@Url.Content("~/posters/" + video.PosterPath)" alt="Video Poster">
                    </a>
                    <div class="card-body">
                        <h4 class="card-title">
                            <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">@video.Title</a>
                            <div class="dropdown-container">
                                <div class="dropdown">
                                    <button onclick="toggleDropdown(this)" class="zxc btn btn-outline-secondary btn-sm custom-btn dropdown-toggle">
                                        ...
                                    </button>
                                    <div class="dropdown-menu">
                                        <a href="@Url.Action("AddToWatchLater", "WatchLater", new { videoId = video.VideoId })" class="dropdown-item">Смотреть позже</a>
                                    </div>
                                </div>
                            </div>
                        </h4>
                        <p class="card-text">
                            <a href="@Url.RouteUrl("channel", new { channelName = video.Channel.Name })">@video.Channel.Name</a>
                        </p>
                        <p class="card-text">
                            <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">@Helper.FormatViews(video.Views.Count) | @Helper.TimeAgo(video.UploadDate)</a>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>По вашему запросу "@Model.SearchTerm" ничего не найдено.</p>
}