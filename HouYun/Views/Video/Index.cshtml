@model HouYun.ViewModels.forVideo.VideoViewModel

@{
    ViewData["Title"] = "HouYun";
}

<style>
    .card-link {
        color: inherit;
        text-decoration: none;
    }

    .video-card {
        background-color: inherit;
        border: none;
    }

    .card-title a,
    .card-text a {
        color: inherit;
        text-decoration: none;
    }
</style>


<div class="row mb-3">
    <div class="col-md-12">
        <div class="overflow-hidden">
            <div class="d-flex flex-nowrap">
                @foreach (var category in Model.Categories)
                {
                    <div class="mr-3">
                        <a class="nav-link" href="@Url.Action("Index", "Video", new { category = category.Name })">@category.Name</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row">
        @foreach (var video in Model.Videos)
        {
            <div class="col-md-3">
                <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })" class="card-link">
                    <div class="card video-card">
                        <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">
                            <img class="card-img-top" src="@Url.Content("~/posters/" + video.PosterPath)" alt="Video Poster">
                        </a>
                        <div class="card-body">
                            <h5 class="card-title"><a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">@video.Title</a></h5>
                            <p class="card-text">
                                <a href="@Url.RouteUrl("channel", new { channelName = video.Channel.Name })">@video.Channel.Name</a>
                            </p>
                            <p class="card-text">@FormatViews(video.Views.Count) | @TimeAgo(video.UploadDate)</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@section Scripts
{
    @functions {
    public static string TimeAgo(DateTime dateTime)
    {
        var timeSpan = DateTime.UtcNow - dateTime;

        if (timeSpan.TotalMinutes < 1)
        {
            return "менее минуты назад";
        }
        if (timeSpan.TotalMinutes < 60)
        {
            var minutes = (int)timeSpan.TotalMinutes;
            return $"{minutes} {(minutes == 1 ? "минуту" : minutes < 5 ? "минуты" : "минут")} назад";
        }
        if (timeSpan.TotalHours < 24)
        {
            var hours = (int)timeSpan.TotalHours;
            if (hours == 1)
            {
                return "час назад";
            }
            else if (hours == 2 || hours == 3 || hours == 4)
            {
                return $"{hours} часа назад";
            }
            else
            {
                return $"{hours} часов назад";
            }
        }
        if (timeSpan.TotalDays < 30)
        {
            var days = (int)timeSpan.TotalDays;
            if (days == 1)
            {
                return "день назад";
            }
            else if (days == 2 || days == 3 || days == 4)
            {
                return $"{days} дня назад";
            }
            else
            {
                return $"{days} дней назад";
            }
        }
        if (timeSpan.TotalDays < 365)
        {
            var months = (int)(timeSpan.TotalDays / 30);
            if (months == 1)
            {
                return "месяц назад";
            }
            else if (months == 2 || months == 3 || months == 4)
            {
                return $"{months} месяца назад";
            }
            else
            {
                return $"{months} месяцев назад";
            }
        }
        var years = (int)(timeSpan.TotalDays / 365);
        if (years == 1)
        {
            return "год назад";
        }
        else if (years == 2 || years == 3 || years == 4)
        {
            return $"{years} года назад";
        }
        else
        {
            return $"{years} лет назад";
        }
    }

    public static string FormatViews(int views)
    {
        if (views < 10000)
        {
            return $"{views} {(views == 1 ? "просмотр" : views < 5 ? "просмотра" : "просмотров")}";
        }
        else if (views < 1000000)
        {
            double thousands = views / 1000.0;
            return $"{thousands:0.#}K просмотров";
        }
        else
        {
            double millions = views / 1000000.0;
            return $"{millions:0.#}M просмотров";
        }
    }
}
}