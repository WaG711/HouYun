@model HouYun.ViewModels.forVideo.VideoViewModel

@{
    ViewData["Title"] = "HouYun";
}

<div class="row mb-3">
    <div class="col-md-12">
        <div class="overflow-hidden">
            <div class="d-flex flex-nowrap">
                @foreach (var category in Model.Categories)
                {
                    <div class="mr-3">
                        <a class="nav-link" href="@Url.Action("Index", "Video", new { category = category.Name })">@category.Name</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    @foreach (var video in Model.Videos)
    {
        <div class="my-custom-col">
            <div class="card video-card">
                <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">
                    <img class="card-img-top poster-image" src="@Url.Content("~/posters/" + video.PosterPath)" alt="Video Poster">
                </a>
                <div class="card-body">
                    <h4 class="card-title">
                        <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">@video.Title</a>
                        <div class="dropdown-container">
                            <div class="dropdown">
                                <button onclick="toggleDropdown(this)" class="zxc btn btn-outline-secondary btn-sm custom-btn dropdown-toggle">
                                    ...
                                </button>
                                <div class="dropdown-menu">
                                    <a href="@Url.Action("AddToWatchLater", "WatchLater", new { videoId = video.VideoId })" class="dropdown-item">Смотреть позже</a>
                                </div>
                            </div>
                        </div>
                    </h4>
                    <p class="card-text">
                        <a href="@Url.RouteUrl("channel", new { channelName = video.Channel.Name })">@video.Channel.Name</a>
                    </p>
                    <p class="card-text">
                        <a href="@Url.Action("Details", "Video", new { videoId = video.VideoId })">@Helper.FormatViews(video.Views.Count) | @Helper.TimeAgo(video.UploadDate)</a>
                    </p>
                </div>
            </div>
        </div>
    }
</div>

<link rel="stylesheet" href="~/css/indexVideos.css" asp-append-version="true" />