@model HouYun3.Models.Video

@{
    ViewData["Title"] = "Video Details";
}

<div>
    <h2>@Model.Title</h2>
    <p>@Model.Description</p>
    <p>Uploaded by: @Model.User.UserName</p>
    <p>Upload Date: @Model.UploadDate.ToString("yyyy-MM-dd HH:mm:ss")</p>
    <video controls style="max-width: 100%;">
        <source src="@Url.Content("~/videos/" + Model.FilePath)" type="video/mp4">
    </video>
    <p>Likes: @Model.Likes</p>
    <form id="likeForm" asp-action="AddLike" asp-controller="Video" method="post">
        <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
        <button type="submit" class="btn btn-primary">Like</button>
    </form>
    <form id="removeLikeForm" asp-action="RemoveLike" asp-controller="Video" method="post">
        <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
        <button type="submit" class="btn btn-danger">Remove Like</button>
    </form>
    <div id="commentsSection">
        <h3>Comments</h3>
        @foreach (var comment in Model.Comments)
        {
            <div>
                <p>@comment.Text</p>
                <p>Posted by: @comment.User.UserName</p>
            </div>
        }
    </div>
    <div id="addCommentSection">
        <h3>Add Comment</h3>
        <form id="addCommentForm" asp-action="AddComment" asp-controller="Comment" method="post">
            <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
            <textarea id="commentText" name="commentText" rows="4" cols="50" required></textarea><br>
            <button type="submit" class="btn btn-primary">Add Comment</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("likeForm").addEventListener("submit", function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            fetch("/Video/AddLike", {
                method: "POST",
                body: formData,
                headers: {
                    RequestVerificationToken: document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert("Liked the video!");
                        window.location.reload();
                    } else {
                        alert("Failed to like the video.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        });

        document.getElementById("removeLikeForm").addEventListener("submit", function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            fetch("/Video/RemoveLike", {
                method: "POST",
                body: formData,
                headers: {
                    RequestVerificationToken: document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert("Removed like from the video!");
                        window.location.reload();
                    } else {
                        alert("Failed to remove like from the video.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        });

        document.getElementById("addCommentForm").addEventListener("submit", function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            fetch("/Comment/AddComment", {
                method: "POST",
                body: formData,
                headers: {
                    RequestVerificationToken: document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => {
                    if (response.ok) {
                        document.getElementById("commentText").value = "";
                        window.location.reload();
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        });
    </script>
}