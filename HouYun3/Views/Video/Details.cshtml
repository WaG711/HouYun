@model HouYun3.Models.Video

@{
    ViewData["Title"] = "Video Details";
}

<div>
    <h2>@Model.Title</h2>
    <p>@Model.Description</p>
    <p>Uploaded by: @Model.User.UserName</p>
    <p>Upload Date: @Model.UploadDate.ToString("yyyy-MM-dd HH:mm:ss")</p>
    <p>Views: @Model.Views.Count</p>

    <video id="videoPlayer" controls style="max-width: 100%;">
        <source src="@Url.Content("~/videos/" + Model.FilePath)" type="video/mp4">
    </video>
    <button id="forwardButton" onclick="forwardVideo()" class="video-control-button">Forward 10s</button>
    <button id="backwardButton" onclick="backwardVideo()" class="video-control-button">Backward 10s</button>

    <p>Likes: @Model.Likes.Count</p>
    <form id="likeForm">
        <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
        <button type="button" onclick="addLike()" class="btn btn-primary">Like</button>
    </form>
    <form id="removeLikeForm">
        <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
        <button type="button" onclick="removeLike()" class="btn btn-danger">Remove Like</button>
    </form>
    <div id="commentsSection">
        <h3>Comments</h3>
        @foreach (var comment in Model.Comments)
        {
            <div>
                <p>@comment.Text</p>
                <p>Posted by: @comment.User.UserName</p>
            </div>
        }
    </div>
    <div id="addCommentSection">
        <h3>Add Comment</h3>
        <form id="addCommentForm">
            <input type="hidden" id="videoId" name="videoId" value="@Model.VideoId" />
            <textarea id="commentText" name="commentText" rows="4" cols="50" required></textarea><br>
            <button type="button" onclick="addComment()" class="btn btn-primary">Add Comment</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var videoId = '@Model.VideoId';
            var userId = '@Model.User.Id';
            addView(videoId, userId);
        });

        function addView(videoId, userId) {
            fetch(`/ViewController/AddView?videoId=${videoId}&userId=${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
                .then(response => {
                    if (!response.ok) {
                        console.error('Ошибка при добавлении просмотра');
                    }
                })
                .catch(error => {
                    console.error('Ошибка при отправке запроса:', error);
                });
        }
    </script>

    <script>
        function addLike() {
            var videoId = document.getElementById("videoId").value;
            fetch("/Like/AddLike?videoId=" + videoId, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert("Failed to like the video.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
        }
    </script>

    <script>
        function removeLike() {
            var videoId = document.getElementById("videoId").value;
            fetch("/Like/RemoveLike?videoId=" + videoId, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert("Failed to remove like from the video.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
        }
    </script>

    <script>
        function addComment() {
            var videoId = document.getElementById("videoId").value;
            var commentText = document.getElementById("commentText").value;

            var formData = new FormData();
            formData.append("videoId", videoId);
            formData.append("commentText", commentText);

            fetch("/Comment/AddComment", {
                method: "POST",
                body: formData,
                headers: {
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        console.error("Failed to add comment.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }
    </script>

    <script>
        function forwardVideo() {
            var videoPlayer = document.getElementById('videoPlayer');
            videoPlayer.currentTime += 10;
        }
    </script>

    <script>
        function backwardVideo() {
            var videoPlayer = document.getElementById('videoPlayer');
            videoPlayer.currentTime -= 10;
        }
    </script>
}